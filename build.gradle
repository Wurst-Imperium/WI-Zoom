plugins {
	id "fabric-loom" version "1.6-SNAPSHOT"
	id "me.modmuss50.mod-publish-plugin" version "0.5.1"
	id "com.diffplug.spotless" version "6.25.0"
}

def ENV = System.getenv()

sourceCompatibility = JavaVersion.VERSION_21
targetCompatibility = JavaVersion.VERSION_21

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

repositories {
	// Add repositories to retrieve artifacts from in here.
	// You should only use this when depending on other mods because
	// Loom adds the essential maven repositories to download Minecraft and libraries from automatically.
	// See https://docs.gradle.org/current/userguide/declaring_repositories.html
	// for more information about repositories.
}

dependencies {
	// To change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// Fabric API. This is technically optional, but you probably want it anyway.
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
}

processResources {
	inputs.property "version", project.version
	
	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	// Minecraft 1.20.5 (24w14a) upwards uses Java 21.
	it.options.release = 21
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.archivesBaseName}"}
	}
}

spotless {
	java {
		removeUnusedImports()
		indentWithTabs()
		trimTrailingWhitespace()
		eclipse().configFile(file("codestyle/formatter.xml"))
		lineEndings('WINDOWS')
	}
}

publishMods {
	file = remapJar.archiveFile
	def versionString = project.version as String
	def ghVersion = "v" + versionString.substring(0, versionString.indexOf("-"))
	def changelogUrl = "https://www.wimods.net/wi-zoom/wi-zoom-1-5/"
	additionalFiles.from(
		file("${project.buildDir}/libs/${archivesBaseName}-${versionString}-sources.jar"),
		file("${project.buildDir}/libs/${archivesBaseName}-${versionString}-dev.jar"),
		file("${project.buildDir}/libs/${archivesBaseName}-${versionString}-sources-dev.jar")
	)
	type = ghVersion.contains("pre") ? BETA : STABLE
	modLoaders.add("fabric")

	curseforge {
		projectId = "349630"
		accessToken = providers.environmentVariable("CURSEFORGE_API_KEY")
		minecraftVersions.add("${project.cf_game_version}")
		requires("fabric-api")
		changelog = "A changelog can be found at: [${changelogUrl}](${changelogUrl}?mc=${project.minecraft_version}&utm_source=CurseForge&utm_medium=WI+Zoom&utm_campaign=Changelog&utm_content=CurseForge+WI+Zoom+MC${project.minecraft_version})"
	}
	modrinth {
		projectId = "wi-zoom"
		accessToken = providers.environmentVariable("MODRINTH_TOKEN")
		minecraftVersions.add("${project.minecraft_version}")
		requires("fabric-api")
		changelog = "A changelog can be found at: [${changelogUrl}](${changelogUrl}?mc=${project.minecraft_version}&utm_source=Modrinth&utm_medium=WI+Zoom&utm_campaign=Changelog&utm_content=Modrinth+WI+Zoom+MC${project.minecraft_version})"
	}
	github {
		repository = "Wurst-Imperium-MCX/WI-Zoom"
		accessToken = providers.environmentVariable("GITHUB_TOKEN")
		tagName = ghVersion
		commitish = "main"
		changelog = ""
	}
}

afterEvaluate {
	tasks.publishMods.dependsOn moveDevLibs
	tasks.publishCurseforge.dependsOn moveDevLibs
	tasks.publishModrinth.dependsOn moveDevLibs
	tasks.publishGithub.dependsOn moveDevLibs
}

task moveDevLibs(dependsOn: [remapJar, remapSourcesJar]) {
	doLast {
		ant.move(file:"${project.buildDir}/devlibs/${archivesBaseName}-${version}-dev.jar", tofile:"${project.buildDir}/libs/${archivesBaseName}-${version}-dev.jar")
		ant.move(file:"${project.buildDir}/devlibs/${archivesBaseName}-${version}-sources.jar", tofile:"${project.buildDir}/libs/${archivesBaseName}-${version}-sources-dev.jar")
	}
}
